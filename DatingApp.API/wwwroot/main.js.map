{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lists.resolver.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private toastr: ToastrService,\n             private router: Router) {}\n  canActivate():  boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n    this.toastr.error('you shall not Pass !!', 'Error Log');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\n\n// Consider using this interface for all CanDeactivate guards,\n// and have your components implement this interface, too.\n//\n//   e.g. export class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n//\n// export interface CanComponentDeactivate {\n// canDeactivate: () => any;\n// }\n\n@Injectable()\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\n    canDeactivate(component: MemberEditComponent) {\n        if (component.editForm.dirty) {\n            return confirm('Are you sure you want to continue? Any unsaved Changes will be lost');\n        }\n        return true;\n    }\n}\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n// this class to stor the inteface information\nexport class PaginatedResult<T> { // use T to use pagination Not Just For User may be for Photo,Messages .. etc\n    result: T; // store class result of user or massages .. etc .(reslut) take data from body\n    pagination: Pagination; // pagination (take) data from header\n}\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    likesParam = 'Likers';\r\n    constructor( private userService: UserService,\r\n                 private router: Router,\r\n                 private toastrService: ToastrService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n            catchError(error => {\r\n                this.toastrService.error('problem retrieving data', 'Retreiveng ERROR');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n    constructor( private userService: UserService,\r\n                 private router: Router,\r\n                 private toastrService: ToastrService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.toastrService.error('problem retrieving data', 'Retriving ERROR');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n    constructor( private userService: UserService,\r\n                 private router: Router, private authService: AuthService,\r\n                 private toastrService: ToastrService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error => {\r\n                this.toastrService.error('problem retrieving your data', 'Retieving ERROR');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    constructor( private userService: UserService,\r\n                 private router: Router,\r\n                 private toastrService: ToastrService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error => {\r\n                this.toastrService.error('problem retrieving data', 'Retreiveng ERROR');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Message } from '../_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = 'Unread';\r\n    constructor( private userService: UserService,\r\n                 private authService: AuthService,\r\n                 private router: Router,\r\n                 private toastrService: ToastrService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n        return this.userService.getMessages(this.authService.decodedToken.nameid,\r\n             this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n            catchError(error => {\r\n                this.toastrService.error('problem retrieving messages', 'Retreiveng ERROR');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\n\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\n// add methods that we will use from the alertify library\n    // () => any = annonymous function called after the confirmed dialog has been confirmed\nconfirm(message: string, okCallback: () => any) {\n  alertify.confirm(message, function(e) {\n    if (e) {\n      // call function when the user confirms\n      okCallback();\n    } else {}\n  });\n}\n\nsuccess(message: string) {\n  alertify.success(message);\n}\n\nerror(message: string) {\n  alertify.error(message);\n}\n\nwarning(message: string) {\n  alertify.warning(message);\n}\n\nmessage(message: string) {\n  alertify.message(message);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { from, BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\nbaseUrl = environment.apiUrl + 'auth/';\njwtHelper = new JwtHelperService();\ndecodedToken: any;\ncurrentUser: User;\nphotoUrl = new BehaviorSubject<string>('../../assets/user.png');\ncurrentPhotoUrl = this.photoUrl.asObservable();\n\nconstructor( private http: HttpClient) { }\n\nchangeMemberPhoto(photoUrl: string) {\n  this.photoUrl.next(photoUrl);\n}\n\nlogin(model: any) {\nreturn  this.http.post(this.baseUrl + 'login' , model)\n           .pipe(\n             map((response: any ) => {\n               const user = response;\n               if (user) {\n                 localStorage.setItem('token', user.token);\n                 localStorage.setItem('user', JSON.stringify(user.user));\n                 this.decodedToken = this.jwtHelper.decodeToken(user.token); // this line just make the token readable\n                 this.currentUser = user.user;\n                 this.changeMemberPhoto(this.currentUser.photoUrl);\n                 // console.log(this.decodedToken);\n               }\n             })\n           );\n}\n\nregister(user: User) {\n  return this.http.post(this.baseUrl + 'register', user);\n}\n\nloggedIn() {\n  const token = localStorage.getItem('token');\n  return !this.jwtHelper.isTokenExpired(token); // isTokenExpired() return a boolean true or false\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n   intercept(req: HttpRequest<any> , next: HttpHandler): Observable<HttpEvent<any>> {\n     return next.handle(req).pipe(\n         catchError( error => {\n            if (error instanceof HttpErrorResponse) {\n                if (error.status === 401) {\n                    return throwError(error.statusText);\n                }\n\n                const applicationError = error.headers.get('Application-Error');\n                if (applicationError) {\n                    console.error(applicationError);\n                    return throwError(applicationError);\n                }\n                const serverError = error.error;\n                let modalStateErrors = '';\n                if (serverError && typeof serverError === 'object') {\n                    for (const key in serverError) {\n                        if (serverError[key]) {\n                            modalStateErrors += serverError[key] + '\\n';\n                        }\n                    }\n                }\n                return throwError(modalStateErrors || serverError || 'Server Error');\n            }\n         })\n     );\n   }\n}\n\nexport const ErrorInterceptorProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n};\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\nimport { post } from 'selenium-webdriver/http';\n\n\n// httpOption is somulation to the postman tester take the same value of the header of postman\n// use it with the http.get in our function => getUsers and getUser\n\n// const httpOptions = {\n//  headers: new HttpHeaders({\n//    'Authorization' : 'Bearer ' + localStorage.getItem('token')\n//  })\n// };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\nconstructor(private http: HttpClient) { }\n\n// this function implemnt in MemberListComponant\ngetUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\n  const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n  let params = new HttpParams(); // Http header params Data\n\n  if (page != null && itemsPerPage != null) {\n    params = params.append('pageNumber', page); // this code to add after the url ?pageNumber=\n    params = params.append('pageSize', itemsPerPage); // this code to add after the url ?pageNumber=8&pageSize=35\n  }\n\n  if (userParams != null) {\n    params = params.append('minAge', userParams.minAge);\n    params = params.append('maxAge', userParams.maxAge);\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n  }\n\n  if (likesParam === 'Likers') {\n    params = params.append('likers', 'true');\n  }\n  if (likesParam === 'Likees') {\n    params = params.append('likees', 'true');\n  }\n\n  return this.http.get<User[]>(this.baseUrl + 'users', {observe: 'response', params})\n  .pipe(\n    map(response => {\n      paginatedResult.result = response.body;\n      if (response.headers.get('Pagination') != null) { // null when we dont send pageNumber, and pageSize\n        paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n      }\n      return paginatedResult;\n    })\n  );\n}\n\n// this function implemnt in MemberDetailComponant\ngetUser(id): Observable<User> {\n  return this.http.get<User>(this.baseUrl + 'users/' + id);\n}\nupdateUser(id: number, user: User) {\n  return this.http.put(this.baseUrl + 'users/' + id, user);\n}\n\nsetMainPhoto(userId: number, id: number) {\n return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {});\n}\n\ndeletePhoto(userId: number, id: number) {\n  return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n}\n\nsendLike(id: number, recipientId: number) {\n  return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n}\n\n// Extend From GetMessagesForUser Method in MessagesController in API\ngetMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n  const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n  let params = new HttpParams();\n\n  params = params.append('messageContainer', messageContainer);\n\n  if (page != null && itemsPerPage != null) {\n    params = params.append('pageNumber', page);\n    params = params.append('pageSize', itemsPerPage);\n  }\n  return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {observe: 'response', params})\n  .pipe(\n    map( response => {\n      paginatedResult.result = response.body;\n      if (response.headers.get('Pagination') != null) { // null when we dont send pageNumber, and pageSize\n        paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n      }\n      return paginatedResult;\n  }));\n}\n\ngetMessageThread(id: number, recipientId: number) {\n  return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n}\n\nsendMessage(id: number, message: Message) {\n  return this.http.post(this.baseUrl + 'users/' + id + '/messages/', message);\n}\n\ndeleteMessage(id: number, userId: number) {\n  return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n}\n\nmarkAsRead(userId: number, messageId: number) {\n  return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {})\n  .subscribe();\n}\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BsDropdownModule, TabsModule, BsDatepickerModule, PaginationModule, ButtonsModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport {TimeAgoPipe} from 'time-ago-pipe';\n\nimport { AppComponent } from './app.component';\nimport { from } from 'rxjs';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AlertifyService } from './_services/alertify.service';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { UserService } from './_services/user.service';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\n\n\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      MessagesComponent,\n      ListsComponent,\n      MemberListComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      TimeAgoPipe,\n      MemberMessagesComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      CommonModule,\n      FileUploadModule,\n      ReactiveFormsModule,\n      ButtonsModule.forRoot(),\n      PaginationModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      BrowserAnimationsModule, // required animations module\n      ToastrModule.forRoot({\n         positionClass: 'toast-bottom-right'\n      }), // ToastrModule added\n      BsDropdownModule.forRoot(),\n      TabsModule.forRoot(),\n      NgxGalleryModule,\n      RouterModule.forRoot(appRoutes),\n      JwtModule.forRoot({\n         config: {\n            tokenGetter: tokenGetter,\n            whitelistedDomains: ['localhost:5000'],\n            blacklistedRoutes: ['localhost:5000/api/auth']\n         }\n      })\n   ],\n   providers: [\n      AuthService,\n      ErrorInterceptorProvider,\n      AlertifyService,\n      AuthGuard,\n      UserService,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      PreventUnsavedChanges,\n      ListsResolver,\n      MessagesResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div  class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!regisertMode\\\" style=\\\"text-align: center;\\\">\\n    <h1>Find Your Match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches ... All You need to do is sign up ! </p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\" >Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn More</button>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"regisertMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  regisertMode = false;\n  constructor( private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n  registerToggle() {\n    this.regisertMode = true;\n  }\n\n\n  cancelRegisterMode(regisertMode: boolean) {\n    this.regisertMode = regisertMode;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like\\n        me</button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I\\n        like</button>\\n    </div>\\n  </div>\\n\\n  <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n\\n\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n\\n  </pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\nusers: User[];\npagination: Pagination;\nlikesParam: string;\n\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private route: ActivatedRoute, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n    .subscribe((res: PaginatedResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.toastr.error('Error', error);\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n}\n","module.exports = \".card:hover img{\\n    -webkit-transform: scale(1.2,1.2);\\n            transform: scale(1.2,1.2);\\n    -webkit-transition-duration: 500ms;\\n            transition-duration: 500ms;\\n    -webkit-transition-timing-function: ease-in-out;\\n            transition-timing-function: ease-in-out;\\n    opacity: 0.7;\\n}\\n.card img{\\n    -webkit-transform: scale(1.0,1.0);\\n            transform: scale(1.0,1.0);\\n    -webkit-transition-duration: 500ms;\\n            transition-duration: 500ms;\\n    -webkit-transition-timing-function: ease-in-out;\\n            transition-timing-function: ease-in-out;\\n}\\n.card-img-wrapper{\\n    overflow: hidden;\\n    position: relative;\\n}\\n.member-icons{\\n    position: absolute;\\n    bottom: -30%;\\n    left: 0;\\n    right: 0;\\n    margin-right: auto;\\n    margin-left: auto;\\n    opacity: 0;\\n}\\n.card-img-wrapper:hover .member-icons{\\n    bottom: 0;\\n    opacity: 1;\\n}\\n.animate{\\n    -webkit-transition: all 0.3s ease-in-out;\\n    transition: all 0.3s ease-in-out;\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img class=\\\"card-img-top\\\"  src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n   \\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" \\n        [routerLink]=\\\"['/members/', user.id]\\\" >\\n        <i class=\\\"fa fa-user\\\"></i></button></li>\\n      \\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" \\n        (click)=\\\"sendLike(user.id)\\\">\\n        <i class=\\\"fa fa-heart\\\"></i></button></li>\\n      \\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"\\n        [routerLink]=\\\"['/members/', user.id]\\\" \\n        [queryParams]=\\\"{tab: 3}\\\" ><i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\">\\n      <i class=\\\"fa fa-user\\\"></i>\\n      {{user.knownAs}},{{user.age}}\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\" >\\n      {{user.city}}\\n    </p>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n@Input() user: User;\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private toaster: ToastrService) { }\n\n  ngOnInit() {\n  }\n\nsendLike(id: number) {\n  this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n    this.toaster.success('you Have Liked: ' + this.user.knownAs, 'Success');\n  }, error => {\n    this.toaster.error(error);\n  });\n}\n\n}\n","module.exports = \".img-thumbnail{\\n    margin: 25px;\\n    width: 85%;\\n    height: 85%;\\n}\\n\\n.card-body{\\n    padding: 0 25px;\\n}\\n\\n.card-footer{\\n    padding: 10px 15px;\\n    background-color: #fff;\\n    border-top: none;\\n}\\n\"","module.exports = \"<div class=\\\"contaner mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    \\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since:</strong>\\n            <p>{{user.created | date:'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\"  >Messages</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabser\\\" #membersTab>\\n          <tab heading=\\\"About {{user?.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user?.introduction}}</p>\\n            <h4>Looking For</h4>\\n            <p>{{user?.lookingFor}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user?.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photo\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <app-member-messages [recipientId]=\\\"user.id\\\" ></app-member-messages>\\n          </tab>\\n        </tabset>\\n        \\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('membersTab') membersTab: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(private userService: UserService, private toastr: ToastrService,\n            private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // retravig data from resolver\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selctedTab = params['tab'];\n      this.membersTab.tabs[selctedTab > 0 ? selctedTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n      {\n      width: '500px',\n      height: '500px',\n      imagePercent: 100,\n      thumbnailsColumns: 4,\n      imageAnimation: NgxGalleryAnimation.Slide,\n      preview: false\n    }\n  ];\n  this.galleryImages = this.getImages();\n    // this.loadUser();\n  }\n\n\n  getImages() {\n    const imageUrls = [];\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imageUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imageUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.membersTab.tabs[tabId].active = true;\n  }\n\n// the route => member/3\n// loadUser() {// added + to change the type of data from string to int\n//   this.userService.getUser(+this.route.snapshot.params['id'])\n//       .subscribe((user: User) => {\n//         this.user = user;\n//       }, error => {\n//         error.toastr.error('', 'Error');\n//       });\n// }\n}\n","module.exports = \".img-thumbnail{\\n    margin: 25px;\\n    width: 85%;\\n    height: 85%;\\n}\\n\\n.card-body{\\n    padding: 0 25px;\\n}\\n\\n.card-footer{\\n    padding: 10px 15px;\\n    background-color: #fff;\\n    border-top: none;\\n}\\n\"","module.exports = \"  <div class=\\\"contaner mt-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n           <h1>Your Profile</h1>\\n      </div>\\n      <div class=\\\"col-sm-8\\\">\\n        <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n            <p><strong>Information:</strong> You Made Some Changes, Any Unsaved Changes will Be Lost</p>\\n        </div>\\n      </div>    \\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"card\\\">\\n              <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n              <div class=\\\"card-body\\\">\\n                <div>\\n                  <strong>Location:</strong>\\n                  <p>{{user.city}}, {{user.country}}</p>\\n                </div>\\n                <div>\\n                  <strong>Age:</strong>\\n                  <p>{{user.age}}</p>\\n                </div>\\n                <div>\\n                  <strong>Last Active:</strong>\\n                  <p>{{user.lastActive | timeAgo}}</p>\\n                </div>\\n                <div>\\n                  <strong>Member Since:</strong>\\n                  <p>{{user.created | date:'mediumDate'}}</p>\\n                </div>\\n              </div>\\n              <div class=\\\"card-footer\\\">\\n                \\n                  <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\n    \\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"col-sm-8\\\">\\n            <div class=\\\"tab-panel\\\">\\n              <tabset class=\\\"member-tabser\\\">\\n                <tab heading=\\\"Edit Profile\\\">\\n                  \\n                  <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n                      <h4>Description</h4>\\n                      <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n                      <h4>Looking For</h4>         \\n                      <textarea name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n                      <h4>Interests</h4>         \\n                      <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.interests\\\"></textarea>\\n                      <h4>Location Detailes:</h4>\\n                      <div class=\\\"form-inline\\\">\\n                        <label for=\\\"city\\\">City:</label>\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                        <label for=\\\"country\\\">Country:</label>\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n                      </div>\\n                  </form>\\n                  \\n                </tab>\\n                <tab heading=\\\"Edit Photos\\\">\\n                  <app-photo-editor [photos]=\\\"user.photos\\\" (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\n                </tab>\\n              </tabset>\\n              \\n            </div>\\n          </div>\\n    </div>\\n     \\n\\n\\n  </div>\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n@ViewChild('editForm') editForm: NgForm;\nuser: User;\nphotoUrl: string;\n// its for to show message when we close the Browser page without making save to our Changes after Editing\n@HostListener('window:beforeunload', ['$event'])\nunloadNotification($event: any) {\n  if (this.editForm.dirty) {\n    $event.returnValue = true;\n  }\n}\n  constructor(private router: ActivatedRoute, private toaster: ToastrService,\n    private userService: UserService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.router.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.authService.decodedToken.nameid,  this.user).subscribe(next => {\n      this.toaster.success('Profile Updated Successfully', 'Success');\n    this.editForm.reset(this.user); // reset the user data afte make changes\n    }, error => {\n      this.toaster.error('Something Error', 'ERROR');\n    });\n    console.log(this.user);\n  }\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n    <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"minAge\\\">Age From</label>\\n          <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\" \\n             [(ngModel)]=\\\"userParams.minAge\\\" name=\\\"minAge\\\">\\n        </div>\\n      \\n        <div class=\\\"form-group px-2\\\">\\n          <label for=\\\"maxAge\\\">Age To</label>\\n          <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\" \\n             [(ngModel)]=\\\"userParams.maxAge\\\" name=\\\"maxAge\\\">\\n        </div>\\n      \\n        <div class=\\\"form-group px-2\\\">\\n          <label for=\\\"gender\\\">Show: </label>\\n          <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\" \\n              [(ngModel)]=\\\"userParams.gender\\\"  name=\\\"gender\\\">\\n            <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n              {{gender.display}}\\n            </option>\\n          </select>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">Reset Filter</button>\\n      \\n        <div class=\\\"col\\\">\\n          <div class=\\\"btn-group float-right\\\">\\n            <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n                    [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\n            <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n                    [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"created\\\">Newest Members</button>\\n          </div>\\n        </div>\\n\\n      </form>\\n      <br>\\n\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" \\n              [totalItems]=\\\"pagination.totalItems\\\"\\n              [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n              [(ngModel)]=\\\"pagination.currentPage\\\"\\n              (pageChanged)=\\\"pageChanged($event)\\\"\\n              previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n\\n</pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport {  ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n users: User[];\n user: User = JSON.parse(localStorage.getItem('user'));\n genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n userParams: any = {};\n pagination: Pagination;\n  constructor(private userService: UserService, private toastr: ToastrService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    // this.loadUsers();\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n    // console.log(this.pagination.currenPage);\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n    .subscribe((res: PaginatedResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.toastr.error('Error', error);\n    });\n  }\n\n}\n","module.exports = \".card {\\n    border: none;\\n}\\n\\n.chat {\\n    list-style: none;\\n    margin: 0;\\n    padding: 0;\\n}\\n\\n.chat li {\\n    margin-bottom: 10px;\\n    padding-bottom: 10px;\\n    border-bottom: 1px dotted #b3a9a9;\\n}\\n\\n.rounded-circle {\\n    height: 50px;\\n    width: 50px;\\n}\\n\\n.card-body {\\n    overflow-y: scroll;\\n    height: 400px;\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      <p>No Messages yet... say hi using the messagebox</p>\\n    </div>\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n         <!-- to them -->\\n          <div *ngIf=\\\"message.senderId == recipientId\\\">\\n            <span class=\\\"chat-img float-left\\\">\\n              <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n            </span>\\n            <div class=\\\"chat-body\\\">\\n              <div class=\\\"header\\\">\\n                <strong class=\\\"primay-font\\\">{{message.senderKnownAs}}</strong>\\n                <small class=\\\"text-muted float-right\\\">\\n                  <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                </small>\\n              </div>\\n              <p>{{message.content}}</p>\\n            </div>\\n          </div>\\n         <!-- to me -->\\n         <div *ngIf=\\\"message.senderId != recipientId\\\">\\n          <span class=\\\"chat-img float-right\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n                <small class=\\\"text-muted \\\">\\n                    <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                    <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(unread)</span>\\n                    <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{message.dateRead | timeAgo}})</span>\\n                  </small>\\n              <strong class=\\\"primay-font float-right\\\">{{message.senderKnownAs}}</strong>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n\\n  </div>\\n\\n  <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\"\\n        [(ngModel)]=\\\"newMessage.content\\\"\\n        name=\\\"content\\\"\\n        required\\n         class=\\\"form-control input-sm\\\"\\n         placeholder=\\\"send private message\\\" >\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!messageForm.valid\\\">Send</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { tap } from 'rxjs/operators';\nimport { MessagesResolver } from 'src/app/_resolvers/messages.resolver';\n\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n@Input() recipientId: number;\nmessages: Message[];\nnewMessage: any = {};\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n    .pipe(\n      tap(messages => {\n        for (let i = 0; i < messages.length; i++){\n          if (messages[i].isRead === false && messages[i].recipientId === currentUserId){\n            this.userService.markAsRead(currentUserId, messages[i].id);\n          }\n        }\n      })\n    )\n    .subscribe(messages => {\n      this.messages = messages;\n    }, error => {\n      this.toastr.error(error);\n    });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n    .subscribe((message: Message) => {\n      this.messages.unshift(message);\n      this.newMessage.content = '';\n    }, error => {\n      this.toastr.error(error);\n    });\n  }\n}\n","module.exports = \"img.img-thumbnail{\\n    height: 100px;\\n    min-width: 100 !important;\\n    margin-bottom: 2px;\\n}\\n\\n.nv-file-over{\\n    border: dotted 3px red;\\n}\\n\\ninput[type=file]{\\n    color: transparent;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" alt=\\\"\\\" class=\\\"img-thumbnail p-1\\\">\\n    <div class=\\\"texr-cente\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" \\n      (click)=\\\"setMainPhoto(photo)\\\"\\n      [ngClass]=\\\"photo.isMain ? 'btn btn-success' : 'btn-secondary'\\\" \\n      [disabled]=\\\"photo.isMain\\\"\\n      >Main</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\"\\n      (click)=\\\"deletePhoto(photo.id)\\\"\\n      [disabled]=\\\"photo.isMain\\\"><i class=\\\"fa fa-trash-o\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n \\n  <div class=\\\"col-md-3\\\">\\n\\n      <h3>Add Photos</h3>\\n\\n      <div ng2FileDrop\\n           [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n           (fileOver)=\\\"fileOverBase($event)\\\"\\n           [uploader]=\\\"uploader\\\"\\n           class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n           <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n          Drop Photos Here\\n      </div>\\n\\n\\n      Multiple\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n      Single\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n      <h3>Upload queue</h3>\\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n      <table class=\\\"table\\\">\\n          <thead>\\n          <tr>\\n              <th width=\\\"50%\\\">Name</th>\\n              <th>Size</th>\\n          </tr>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let item of uploader.queue\\\">\\n              <td><strong>{{ item?.file?.name }}</strong></td>\\n              <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n           \\n          </tr>\\n          </tbody>\\n      </table>\\n\\n      <div>\\n          <div>\\n              Queue progress:\\n              <div class=\\\"progress mb-4\\\" >\\n                  <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n              </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                  (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n              <span class=\\\"fa fa-upload\\\"></span> Upload \\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                  (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n              <span class=\\\"fa fa-ban\\\"></span> Cancel \\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                  (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n              <span class=\\\"fa fa-trash\\\"></span> Remove \\n          </button>\\n      </div>\\n\\n  </div>\\n\\n</div>\\n\\n<br><br>\\n\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Photo } from 'src/app/_models/Photo';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n\n  constructor(private authService: AuthService, private userService: UserService,\n     private toastrService: ToastrService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploder();\n  }\n\n fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n initializeUploder() {\n  this.uploader = new FileUploader({\n    url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n    authToken: 'Bearer ' + localStorage.getItem('token'),\n    isHTML5: true,\n    allowedFileType: ['image'],\n    removeAfterUpload: true,\n    autoUpload: false,\n    maxFileSize: 10 * 1024 * 1024\n  });\n  // onAfterAddingFile this function to make the authToken Secure\n  this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; };\n\n  // onSuccessItem this fucction to show the result of uploading the photo immedately without refreshing the page\n  this.uploader.onSuccessItem = (item, response, status, headers) => {\n    if (response) {\n      const res: Photo = JSON.parse(response); // convetr the string to json file\n      const photo = {\n        id: res.id,\n        url: res.url,\n        dateAdded: res.dateAdded,\n        description: res.description,\n        isMain: res.isMain\n      };\n      this.photos.push(photo);\n      if (photo.isMain) {\n        this.authService.changeMemberPhoto(photo.url);\n        this.authService.currentUser.photoUrl = photo.url;\n        localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n      }\n    }\n  };\n }\n\n setMainPhoto(photo: Photo) {\n  this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n    this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n    this.currentMain.isMain = false;\n    photo.isMain = true;\n    // this.getMemberPhotoChange.emit(photo.url);\n    this.authService.changeMemberPhoto(photo.url);\n    this.authService.currentUser.photoUrl = photo.url;\n    localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n    // console.log('success set the main photo');\n  }, error => {\n    this.toastrService.error(' Error', 'Photo Setting ERROR');\n  });\n }\n\n deletePhoto(id: number) {\n  //  this.alertify.confirm('Are You Sure you want to Delete this photo?', () => {\n    this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n      this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n      this.toastrService.success('Photo Has been Deleted', 'DELETED');\n    }, error => {\n      this.toastrService.error('Faild to Delete The Photo', 'FAIELD MASSAGE');\n    });\n  //  });\n }\n}\n","module.exports = \"table {\\n    margin-top: 15px;\\n}\\n\\n.img-circle {\\n    max-height: 50px;\\n}\\n\\ntd {\\n    vertical-align: middle;\\n}\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n    <h3>No messages</h3>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Message</th>\\n        <th style=\\\"width: 20%\\\">From / To</th>\\n        <th style=\\\"width: 20%\\\">Sent / Received</th>\\n        <th style=\\\"width: 20%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members', \\n        messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\"\\n        [queryParams]=\\\"{tab:3}\\\">\\n        <td>{{message.content}}</td>\\n        <td>\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n                <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n                <strong>{{message.senderKnownAs}}</strong>\\n          </div>\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n                <img src={{message?.recipientPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n                <strong>{{message.recipientKnownAs}}</strong>\\n          </div>\\n        </td>\\n        <td>{{message.messageSent | timeAgo}}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <pagination [boundaryLinks]=\\\"true\\\" \\n                [totalItems]=\\\"pagination.totalItems\\\"\\n                [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n                [(ngModel)]=\\\"pagination.currentPage\\\"\\n                (pageChanged)=\\\"pageChanged($event)\\\"\\n              previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private route: ActivatedRoute,\n              private toastr: ToastrService ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\n       this.pagination.itemsPerPage, this.messageContainer)\n       .subscribe((res: PaginatedResult<Message[]>) => {\n         this.messages = res.result;\n         this.pagination = res.pagination;\n       }, error => {\n         this.toastr.error(error);\n       });\n  }\n\n  deleteMessage(id: number) {\n    this.userService.deleteMessage(id, this.authService.decodedToken.nameid)\n      .subscribe(() => {\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        this.toastr.success('Message has been deleted', 'Deleting Message');\n      }, error => {\n        this.toastr.error('Message Failed to Delete', 'Failed Deleting');\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n}\n","module.exports = \".dropdown-toggle, .dropdown-item{\\n    cursor: pointer;\\n}\\n\\nimg{\\n    max-height: 50px;\\n    border: 2px solid white;\\n    display: inline;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark  bg-primary\\\">\\n <div class=\\\"container\\\">  \\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\"  >Dating App</a>\\n \\n  <ul class=\\\"navbar-nav mr-auto\\\" *ngIf=\\\"loggedIn()\\\">\\n    \\n    <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\"  >Matches </a>\\n    </li>\\n    <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\"  >Lists</a>\\n    </li>\\n    <li class=\\\"nav-item\\\"  routerLinkActive=\\\"active\\\">\\n      <a class=\\\"nav-link \\\" [routerLink]=\\\"['/messages']\\\" >Messages</a>\\n    </li>\\n\\n \\n  </ul>\\n   \\n  <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n    <span class=\\\"mr-1\\\">\\n      <img src=\\\"{{photoUrl || '../../assets/user.png'}}\\\" alt=\\\"\\\">\\n    </span>\\n    <a class=\\\"dropdown-toggle text-light\\\"  dropdownToggle>\\n      Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n    </a>\\n  \\n    <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu >\\n      <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['member/edit']\\\" >\\n        <i class=\\\"fa fa-user\\\"></i>Edit Profile</a>\\n      <div class=\\\"dropdown-devider\\\"></div>\\n      <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">\\n        <i class=\\\"fa fa-sign-out\\\"></i>Sign Out</a>\\n    </div>\\n  </div>\\n\\n  <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" \\n            placeholder=\\\"UserName\\\" required [(ngModel)]=\\\"model.username\\\">\\n            \\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" \\n            placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\n\\n    <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n\\n  </form>\\n </div>\\n  \\n \\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\nmodel: any = {};\nphotoUrl: string;\n\n  constructor(public authService: AuthService, private alertify: AlertifyService,\n              private toastr: ToastrService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(next => {\n      this.toastr.success('ALERT:login sucssfully', 'Success');\n      // this.alertify.success(':ALERT:login sucssfully');\n      // console.log('login sucssfully');\n    }, error => {\n      this.toastr.warning('Login Failed', 'Faulier');\n      // this.alertify.error(error);\n      // console.log(error);\n      // console.log('Faulier');\n    }, () => {\n      this.router.navigate(['/members']);\n    });\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n    // const token = localStorage.getItem('token');\n    // return !!token;\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.toastr.info('LogOut', '');\n    // this.alertify.message(':ALRET: Logout');\n    this.router.navigate(['/home']);\n    // console.log('logout');\n  }\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline ml-3\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n    </label>\\n  </div>\\n\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors && \\n                              registerForm.get('username').touched}\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Username\\\">\\n\\n    <div class=\\\"invalid-feedback\\\"> Please Choose User Name </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is\\n      required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" >\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of\\n      Birth is required</div>\\n  </div>\\n\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is\\n      required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors &&\\n                              registerForm.get('password').touched}\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Password\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') &&\\n               registerForm.get('password').touched\\\">\\n      Password is Required\\n    </div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') && \\n               registerForm.get('password').touched\\\">\\n      Password must be at least 4 Character\\n    </div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('maxlength') && \\n               registerForm.get('password').touched\\\">\\n      Password cannet Exceed 8 Character\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors &&\\n                                     registerForm.get('confirmPassword').touched ||\\n                                     registerForm.get('confirmPassword').touched &&\\n                                     registerForm.hasError('missMatch')}\\\" formControlName=\\\"confirmPassword\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\">\\n\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') && \\n                  registerForm.get('confirmPassword').touched\\\">\\n      Password is Required\\n    </div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.hasError('missMatch') && \\n            registerForm.get('confirmPassword').touched\\\">\\n      Password Must Matched\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n@Output() cancelRegister = new EventEmitter();\nuser: User;\nregisterForm: FormGroup;\nbsConfig: Partial<BsDatepickerConfig>; // type Partial mean that all proparties of <BsDatepickerConfig> are optinal\n\n  constructor( private authService: AuthService, private alertify: AlertifyService,\n     private toastr: ToastrService, private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    },\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'missMatch': true};\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value); // we use this Object function to extract data from registerForm\n      this.authService.register(this.user).subscribe(() => {\n        this.toastr.success('ALERT: Registeration Sucsseffly', 'success');\n      }, error => {\n        this.toastr.error('password or user Name have problem', 'Error');\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/members']);\n        });\n      });\n    }\n    // console.log(this.registerForm.value);\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n    // console.log('Canceld');\n  }\n}\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\n\nexport const appRoutes: Routes = [\n    {path: '', component: HomeComponent},\n    // {path: 'members', component: MemberListComponent, canActivate: [AuthGuard]}, // this is guard for one link\n    {\n        path: '',\n        runGuardsAndResolvers: 'always',\n        canActivate: [AuthGuard],\n        children: [\n            {path: 'members', component: MemberListComponent, resolve: {users: MemberListResolver}},\n            {path: 'members/:id', component: MemberDetailComponent, resolve: {user: MemberDetailResolver}},\n            {path: 'member/edit', component: MemberEditComponent, resolve: {user: MemberEditResolver},\n             canDeactivate: [PreventUnsavedChanges]},\n            {path: 'lists', component: ListsComponent, resolve: {users: ListsResolver}},\n            {path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver}}\n        ]\n    },\n    {path: '**', redirectTo: '', pathMatch: 'full'},\n\n];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:  'http://localhost:5000/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}